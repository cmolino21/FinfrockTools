<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMIOAADCDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkVEASJ1g
        AP+dYAD/nWAA/51gAP+RUQBIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRUACfnWAA/51gAP+dYAD/nWAA/5FQAJ8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlU8AHZ1gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5VPAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJRTACuZXACrkU8AOgAA
        AAAAAAAAAAAAAAAAAACSTwCQnWAA/51gAP+dYAD/nWAA/51gAP+dYAD/kk8AkAAAAAAAAAAAAAAAAAAA
        AACRTwA6mVwAq5RTACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUUwArm10A651g
        AP+dYAD/m10A3JhaAGuRWwAOlU8AHZtdAOudYAD/nWAA/51gAP+dYAD/nWAA/51gAP+bXQDrlU8AHZFb
        AA6YWgBrm10A3J1gAP+dYAD/m10A65RTACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlFMAK5td
        AOudYAD/nWAA/51gAP+dYAD/nWAA/5tdAOudYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/m10A651gAP+dYAD/nWAA/51gAP+dYAD/m10A65RTACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRUACfnWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/kVAAnwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJFPADqdYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+RTwA6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJhZANadYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/mFkA1gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAklAAZZ1gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+SUABlAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRWwAOm10A651gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+aWgC5mVoAXZtfAECbXwBAmVoAXZpaALmdYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/m10A65FbAA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJVPAB2dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/kk8AVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJPAFedYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/lU8AHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJVPAB2bXQCcm10A651g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/5JPAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJJP
        AFedYAD/nWAA/51gAP+dYAD/nWAA/51gAP+bXQDrm10AnJVPAB0AAAAAAAAAAJxeAE6aWgC5nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+VVQCzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJVVALOdYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5paALmcXgBOnWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5JPAFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkk8AV51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/kU8AOgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRTwA6nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+RTwA6AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJFPADqdYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5JP
        AFcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkk8AV51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+cXgBOmloAuZ1gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/lVUAswAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVVQCznWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+aWgC5nF4ATgAAAAAAAAAAlU8AHZtdAJybXQDrnWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/kVEASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkVEASJ1g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/5tdAOucXwCOlU8AHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJVP
        AB2dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+bXQDrkVEASAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJFR
        AEibXQDrnWAA/51gAP+dYAD/nWAA/51gAP+dYAD/lU8AHQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAkVsADptdAOudYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/mloAuZxeAE6VTwAdlU8AHZxe
        AE6aWgC5nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5tdAOuRWwAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACSUABlnWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/5JPAFcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJhZANadYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/mFkA1gAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACRTwA6nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/kU8AOgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJFQAJ+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/51gAP+STwCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlFMAK5tdAOudYAD/nWAA/51g
        AP+dYAD/nWAA/5tdAOudYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/nWAA/51gAP+dYAD/m10A651g
        AP+dYAD/nWAA/51gAP+dYAD/m10A65RTACsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlFMAK5td
        AOudYAD/nWAA/5tdANyYWgBrkVsADpVPAB2bXQDrnWAA/51gAP+dYAD/nWAA/51gAP+dYAD/m10A65VP
        AB2RWwAOmVoAXZtdANydYAD/nWAA/5tdAOuUUwArAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAlFMAK5lcAKuRTwA6AAAAAAAAAAAAAAAAAAAAAJJPAJCdYAD/nWAA/51gAP+dYAD/nWAA/51g
        AP+RUACCAAAAAAAAAAAAAAAAAAAAAJFPADqbXQCclFMAKwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlU8AHZ1gAP+dYAD/nWAA/51g
        AP+dYAD/nWAA/5VPAB0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkVAAn51g
        AP+dYAD/nWAA/51gAP+RUACfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRUQBInWAA/51gAP+dYAD/nWAA/5FRAEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//gf///4H///8A//+PAPH/AAAA/gAAAH4AAAB+AAAAfwAAAP8AAAD/AA
        AA/wB+APwA/wAwAf+AAAH/gAAB/4AAAf+AAAH/gAAB/4AMAP8APwB+AP8AAAD/AAAA/wAAAP4AAAB+AA
        AAfgAAAH8AAAD/jwDx//8A////gf///4H/8=
</value>
  </data>
</root>